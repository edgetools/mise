#!/usr/bin/env pwsh

# environment
# ======================================================================================================================

# Set-PSDebug -Trace 2

# functions
# ======================================================================================================================
function script:Get-ScriptFiles {
  $scriptFiles = [System.Collections.Generic.List[System.Object]]::new()
  # get .ps1 scripts but ignore test files
  $scriptFiles.AddRange(@(Get-ChildItem -LiteralPath $PWD -Recurse -File -Filter '*.ps1' -Exclude '*.tests.ps1'))
  # get .psm1 module files
  $scriptFiles.AddRange(@(Get-ChildItem -LiteralPath $PWD -Recurse -File -Filter '*.psm1'))
  return $scriptFiles
}

function script:Invoke-MakeTarget {
  switch ($args[0]) {
    # test
    'test' {
      script:Invoke-MakeTargets 'unit' 'systest'
      # Invoke-Pester -CodeCoverage (script:Get-ScriptFiles)
    }
    # unit tests
    'unit' {
      Invoke-Pester -CodeCoverage (script:Get-ScriptFiles) -Tag 'unit'
    }
    # system tests
    'systest' {
      Invoke-Pester -Tag 'system'
    }
  }
}

function script:Invoke-MakeTargets {
  foreach ($target in $args) {
    script:Invoke-MakeTarget $target
  }
}

# main
# ======================================================================================================================

# make targets dispatch
if ($args.Count -eq 0) {
  script:Invoke-MakeTargets $DEFAULT_TARGETS
} else {
  script:Invoke-MakeTargets $args
}
